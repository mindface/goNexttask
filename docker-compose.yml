version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gonexttask-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gonexttask
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gonexttask-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gonexttask-api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: gonexttask
      DB_SSLMODE: disable
      PORT: 8080
      JWT_SECRET: your-secret-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gonexttask-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: gonexttask-nginx
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - gonexttask-network

volumes:
  postgres_data:

networks:
  gonexttask-network:
    driver: bridge